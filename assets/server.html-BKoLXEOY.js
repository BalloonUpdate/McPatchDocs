import{_ as e,o as a,c,e as t}from"./app-DE99FDxf.js";const i={},r=t('<h1 id="搭建服务端" tabindex="-1"><a class="header-anchor" href="#搭建服务端" aria-hidden="true">#</a> 搭建服务端</h1><p>McPatch的服务端是分离架构，打包版本和启动服务端是分开进行的，以方便大佬们魔改出自己的更新系统</p><h2 id="启动服务端" tabindex="-1"><a class="header-anchor" href="#启动服务端" aria-hidden="true">#</a> 启动服务端</h2><p>如果你是小白，非常建议使用自带的服务端，也就是<code>MiniHttpServer</code>，开箱即用，无需任何配置</p><p>启动自带的服务端很简单，在之前的教程中我们已经编写好了启动脚本，此时直接双击<code>httpserver.bat</code>文件就可以启动自带服务端了</p><p>启动成功后服务端会自动输出一个叫<code>API地址</code>的东西，我们需要复制这个地址，后面会有用</p><h2 id="本地访问测试" tabindex="-1"><a class="header-anchor" href="#本地访问测试" aria-hidden="true">#</a> 本地访问测试</h2><p>使用自己电脑上的浏览器打开刚复制的<code>API地址</code>，若显示<code>FORBIDDEN: Directory is unable to show</code>就表示服务端正常启动了。此时将浏览器中的地址复制一份，后面会用到</p><p>若你是在VPS上搭建服务端，那么需要使用VPS上的浏览器访问，而不是用自己电脑上的浏览器</p><p>这一步测试99%会成功，如果失败记得看看是不是6600端口冲突了，换个端口再试试</p><h2 id="远程访问测试" tabindex="-1"><a class="header-anchor" href="#远程访问测试" aria-hidden="true">#</a> 远程访问测试</h2><p>接着是远程访问测试，这一步很重要，因为你安装McPatch最终是要发出去给玩家用的，而不是给自己用的</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>远程访问测试很重要，可以推迟，但不要跳过！浏览器显示的报错信息远比客户端程序丰富，对调试网络问题有极大的帮助！</p></div><p>测试过程不复杂，将McPatch的端口（6600）映射出去之后，或者放行防火墙，安全组之后。将<code>API地址</code>里的本地IP地址替换为你外网的IP或者域名再浏览器进行访问就行了。注意此时要用你自己电脑上的浏览器，而不能用服务器上安装的</p><p>满足以下所有条件，才能算所测试通过：</p><ol><li>浏览器显示：<code>FORBIDDEN: Directory is unable to show</code>字样</li><li>多次测试打开时间均小于5s（尽量在3s以内是最好的）</li></ol><p>如果第一个条件不满足，需要根据浏览器显示的内容做对应的处理。若第二个条件不满足，就要排查网络是否稳定（自己电脑的网络和服务器网络都要排查）</p><p>若测试通过，那么服务端就算安装成功了。此时将浏览器里的地址复制一份，后面会用到</p><h3 id="备案问题" tabindex="-1"><a class="header-anchor" href="#备案问题" aria-hidden="true">#</a> 备案问题</h3><p>大陆公有云的VPS要求要有 ICP 备案，如果没有就搭建不了更新，因为更新走的是HTTP协议</p><p>同时樱花映射也要求要有 ICP 备案，才能使用国内节点，否则只能会一刀切阻断所有https/tls流量</p><p>若你没有备案，可以尝试下面几种方法来搭建更新：</p><ol><li>选择海外VPS和节点，因为海外无需备案</li><li>使用SFTP协议进行更新，目前已经提供了SFTP服务端，SFTP协议是免备案的</li></ol><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>切勿直接使用linux ssh的sftp做更新，这是极其危险的行为！务必使用xlight、filezilla等专用软件，或使用Docker进行隔离。然后将目录设置为只读，不要暴露任何外部写入权限</p></div>',24),o=[r];function d(s,p){return a(),c("div",null,o)}const n=e(i,[["render",d],["__file","server.html.vue"]]);export{n as default};
