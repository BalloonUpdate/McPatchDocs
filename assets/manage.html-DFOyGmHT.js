import{_ as e,o as a,c as d,e as o}from"./app-DE99FDxf.js";const c={},r=o('<h1 id="管理端faq" tabindex="-1"><a class="header-anchor" href="#管理端faq" aria-hidden="true">#</a> 管理端FAQ</h1><p>一些常见的问题都列举在这里了，希望对你有帮助。</p><h3 id="outofmemoryerror-java-heap-space" tabindex="-1"><a class="header-anchor" href="#outofmemoryerror-java-heap-space" aria-hidden="true">#</a> OutOfMemoryError: Java heap space</h3><p>创建新版本时，打包文件到一半出现这个问题</p><p><code>影响范围</code>：管理端全版本</p><p><code>问题原因</code>：给管理端分配的内存不够大</p><p><code>解决方法</code>：参考下面的《内存不足，打包过程中断》问题</p><h3 id="创建新版本时直接提示版本号为空" tabindex="-1"><a class="header-anchor" href="#创建新版本时直接提示版本号为空" aria-hidden="true">#</a> 创建新版本时直接提示版本号为空</h3><p>创建新版本时， 没有任何输入就直接提示版本号为空</p><p><code>影响范围</code>：管理端 1.1.0 至 1.1.2</p><p><code>问题原因</code>：软件bug</p><p><code>解决方法</code>：升级到管理端 1.1.3或者更高版本</p><h3 id="暂时不支持打包大小超过2gb的文件" tabindex="-1"><a class="header-anchor" href="#暂时不支持打包大小超过2gb的文件" aria-hidden="true">#</a> 暂时不支持打包大小超过2GB的文件</h3><p><code>影响范围</code>：管理端全版本</p><p><code>问题原因</code>：受部分JavaAPI的限制，Int类型只能表示2GB大小以内的文件</p><p><code>解决方法</code>：不要打包单个大小超过2GB的文件</p><h3 id="内存不足-打包过程中断" tabindex="-1"><a class="header-anchor" href="#内存不足-打包过程中断" aria-hidden="true">#</a> 内存不足，打包过程中断</h3><p><code>影响范围</code>：管理端全版本</p><p><code>问题原因</code>：打包过程非常消耗内存，如果分配的内存过少，又要执意进行打包，可能会出现这个问题</p><p><code>解决方法</code>：使用JVM参数<code>-Xmx4g</code>或者<code>-Xmx4096m</code>分配更多内存（同Minecraft服务端设置的方式）</p><p>此问题多出现在打包大型文件时，一般认为超过100mb以上的单文件为大型文件，打包越大的文件时越应该有更大的内存</p><p>注：出现此问题的概率 = 文件大小的平方（没错就是平方）</p><h3 id="补丁文件超过了2gb大小的限制" tabindex="-1"><a class="header-anchor" href="#补丁文件超过了2gb大小的限制" aria-hidden="true">#</a> 补丁文件超过了2Gb大小的限制</h3><p><code>影响范围</code>：管理端全版本</p><p><code>问题原因</code>：一次性打包的内容太多，导致最终补丁文件超过你2Gb大小的限制，受部分JavaAPI的限制，Int类型只能表示2GB大小以内的文件</p><p><code>解决方法</code>：将一次更新分开打包到多个更新包里</p><h3 id="stream-is-not-in-the-bzip2-format" tabindex="-1"><a class="header-anchor" href="#stream-is-not-in-the-bzip2-format" aria-hidden="true">#</a> Stream is not in the BZip2 format</h3><p><code>影响范围</code>：管理端1.0.3和之前的版本</p><p><code>问题原因</code>：代码bug导致</p><p><code>解决方法</code>：升级到1.0.4或者更高版本</p><h3 id="是否有类似gitignore的机制" tabindex="-1"><a class="header-anchor" href="#是否有类似gitignore的机制" aria-hidden="true">#</a> 是否有类似gitignore的机制</h3><p>是否有类似gitignore机制来忽略对工作空间目录下某些文件的打包，这样就让管理端和客户端共用一份目录了</p><p>没有这个机制，建议管理端和客户端的维护分开维护，不要共享，这会在很大程度上避免很多非常隐蔽的暗坑</p>',33),p=[r];function h(i,t){return a(),d("div",null,p)}const s=e(c,[["render",h],["__file","manage.html.vue"]]);export{s as default};
