import{_ as e,o as a,c,e as o}from"./app-DE99FDxf.js";const i={},l=o('<h1 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h1><p>一些使用小提示：</p><ol><li>熟悉一些计算机相关的知识会让你在使用过程中遇到的坑更少</li><li>遇到问题先来常见问题解答找答案，这里收录了大部分常见的报错信息</li><li>有过开服经验或者Java开发经验会让你上手的更快</li></ol><h2 id="下载文件" tabindex="-1"><a class="header-anchor" href="#下载文件" aria-hidden="true">#</a> 下载文件</h2><p>在开始安装McPatch之前，你需要先下载好这些文件：</p><ol><li><code>McPatchManage.jar</code>（管理端）：用来打更新包</li><li><code>MiniHttpServer.jar</code>（服务端）：小白友好的HTTP服务器，用来让客户端下载更新</li><li><code>McPatchClient.jar</code>（客户端）：用来更新客户端文件</li></ol><p>然后在桌面新建一个文件夹叫<code>mp</code>（名字可以随意），再把管理端和服务端放进去，要放到一起</p><h2 id="编写启动脚本" tabindex="-1"><a class="header-anchor" href="#编写启动脚本" aria-hidden="true">#</a> 编写启动脚本</h2><p>接下来需要编写两个简单的启动脚本来启动管理端和服务端</p><ol><li>打开刚创建的<code>mp</code>目录</li><li>新建<code>manage.bat</code>，粘贴<code>java -jar xxx.jar &amp; pause</code>，然后保存关闭 <ul><li>把<code>xxx</code>换成管理端的实际文件名</li></ul></li><li>新建<code>httpserver.bat</code>，粘贴<code>java -jar xxx.jar &amp; pause</code>，然后保存关闭 <ul><li>把<code>xxx</code>换成服务端的实际文件名</li></ul></li><li>在<code>mp</code>目录下创建一个新的目录叫<code>workspace</code></li></ol><p>每个文件的用途：</p><ul><li><code>manage.bat</code>脚本用来启动管理端，打新的更新包，用完后可以关掉管理端</li><li><code>httpserver.bat</code>脚本用来启动服务端，给客户端下载用，需要一直开着不能关闭</li><li><code>workspace</code>目录用来存放你要更新的文件</li></ul>',12),d=[l];function r(t,p){return a(),c("div",null,d)}const h=e(i,[["render",r],["__file","preparations.html.vue"]]);export{h as default};
